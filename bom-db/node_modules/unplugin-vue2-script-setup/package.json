{
  "name": "unplugin-vue2-script-setup",
  "version": "0.9.3",
  "description": "Bring <script setup> to Vue 2",
  "keywords": [],
  "homepage": "https://github.com/antfu/unplugin-vue2-script-setup#readme",
  "bugs": {
    "url": "https://github.com/antfu/unplugin-vue2-script-setup/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/antfu/unplugin-vue2-script-setup.git"
  },
  "funding": "https://github.com/sponsors/antfu",
  "license": "MIT",
  "author": "Anthony Fu <anthonyfu117@hotmail.com>",
  "exports": {
    ".": {
      "require": "./dist/index.js",
      "import": "./dist/index.mjs",
      "types": "./index.d.ts"
    },
    "./*": "./*",
    "./esbuild": {
      "require": "./dist/esbuild.js",
      "import": "./dist/esbuild.mjs",
      "types": "./esbuild.d.ts"
    },
    "./jest": "./jest.js",
    "./nuxt": {
      "require": "./dist/nuxt.js",
      "import": "./dist/nuxt.mjs",
      "types": "./nuxt.d.ts"
    },
    "./rollup": {
      "require": "./dist/rollup.js",
      "import": "./dist/rollup.mjs",
      "types": "./rollup.d.ts"
    },
    "./types": {
      "types": "./types.d.ts"
    },
    "./vite": {
      "require": "./dist/vite.js",
      "import": "./dist/vite.mjs",
      "types": "./vite.d.ts"
    },
    "./webpack": {
      "require": "./dist/webpack.js",
      "import": "./dist/webpack.mjs",
      "types": "./webpack.d.ts"
    }
  },
  "main": "dist/index.js",
  "types": "index.d.ts",
  "files": [
    "dist",
    "jest.js",
    "*.d.ts"
  ],
  "dependencies": {
    "@antfu/utils": "^0.4.0",
    "@babel/core": "^7.16.7",
    "@babel/generator": "^7.16.8",
    "@babel/parser": "^7.16.8",
    "@babel/traverse": "^7.16.8",
    "@babel/types": "^7.16.8",
    "@rollup/pluginutils": "^4.1.2",
    "@vue/compiler-core": "^3.2.26",
    "@vue/compiler-dom": "^3.2.26",
    "@vue/reactivity-transform": "^3.2.26",
    "@vue/shared": "^3.2.26",
    "defu": "^5.0.0",
    "htmlparser2": "5.0.1",
    "magic-string": "^0.25.7",
    "tslib": "^2.3.1",
    "unplugin": "^0.3.0"
  },
  "devDependencies": {
    "@antfu/eslint-config": "^0.15.0",
    "@antfu/ni": "^0.12.0",
    "@rollup/plugin-alias": "^3.1.9",
    "@rollup/plugin-commonjs": "^21.0.1",
    "@rollup/plugin-json": "^4.1.0",
    "@rollup/plugin-node-resolve": "^13.1.3",
    "@types/babel__core": "^7.1.18",
    "@types/estree": "^0.0.50",
    "@types/node": "^17.0.8",
    "@types/ws": "^8.2.2",
    "@vue/composition-api": "^1.4.3",
    "@vue/runtime-dom": "^3.2.26",
    "bumpp": "^7.1.1",
    "eslint": "^8.6.0",
    "fast-glob": "^3.2.10",
    "pug": "^3.0.2",
    "rimraf": "^3.0.2",
    "rollup": "^2.63.0",
    "rollup-plugin-dts": "^4.1.0",
    "rollup-plugin-typescript2": "^0.31.1",
    "typescript": "^4.5.4",
    "vite": "^2.7.10",
    "vitest": "0.0.120"
  },
  "peerDependencies": {
    "pug": "^3.0.2",
    "@vue/composition-api": "^1.4.3",
    "@vue/runtime-dom": "^3.2.26"
  },
  "peerDependenciesMeta": {
    "pug": {
      "optional": true
    }
  },
  "scripts": {
    "build": "rimraf dist && rollup -c",
    "dev": "rollup -c --watch",
    "lint": "eslint \"{src,test}/**/*.ts\"",
    "lint:fix": "nr lint -- --fix",
    "build:examples": "pnpm -r --filter=!unplugin-vue2-script-setup run build",
    "play": "npm -C playground run dev",
    "release": "bumpp --commit --push --tag && pnpm publish",
    "test": "vitest",
    "test:update": "vitest -u"
  },
  "readme": "# unplugin-vue2-script-setup\n\n[![NPM version](https://img.shields.io/npm/v/unplugin-vue2-script-setup?color=a1b858&label=)](https://www.npmjs.com/package/unplugin-vue2-script-setup)\n\nBring [`<script setup>`](https://v3.vuejs.org/api/sfc-script-setup.html#sfc-script-setup) to Vue 2. Works for Vite, Nuxt, Vue CLI, Webpack, esbuild and more, powered by [unplugin](https://github.com/unjs/unplugin).\n\n## Install\n\n```bash\nnpm i -D unplugin-vue2-script-setup\nnpm i @vue/composition-api\n```\n\nInstall [`@vue/composition-api`](https://github.com/vuejs/composition-api) in your App's entry (it enables the `setup()` hook):\n\n```ts\nimport Vue from 'vue'\nimport VueCompositionAPI from '@vue/composition-api'\n\nVue.use(VueCompositionAPI)\n```\n\n<details>\n<summary>Vite</summary><br>\n\n```ts\n// vite.config.ts\nimport { defineConfig } from 'vite'\nimport { createVuePlugin as Vue2 } from 'vite-plugin-vue2'\nimport ScriptSetup from 'unplugin-vue2-script-setup/vite'\n\nexport default defineConfig({\n  plugins: [\n    Vue2(),\n    ScriptSetup({ /* options */ }),\n  ],\n})\n```\n\nExample: [`playground/`](./playground/)\n\n<br></details>\n\n<details>\n<summary>Nuxt</summary><br>\n\n> From v0.28.0 of `@nuxtjs/composition-api`, this plugin is included and enabled out-of-box.\n\n```bash\nnpm i @nuxtjs/composition-api\n```\n\n```ts\n// nuxt.config.js\nexport default {\n  buildModules: [\n    '@nuxtjs/composition-api/module',\n  ],\n  scriptSetup: { /* options */ },\n}\n```\n\n> This module works for both Nuxt 2 and [Nuxt Vite](https://github.com/nuxt/vite)\n\nExample: [`examples/nuxt`](./examples/nuxt)\n\n###### Component Meta\n\nNote that `<script setup>` could co-exist with `<script>`, if you want to define component metadata like `layout` or `head` for Nuxt, you can do it this way:\n  \n```html\n<script setup lang=\"ts\">\n// your script setup\n</script>\n\n<script lang=\"ts\">\n// the normal script\nexport default {\n  layout: 'user',\n  // ...other meta\n}\n</script>\n```\n  \n###### TypeScript\n\nTo use TypeScript with Nuxt, install the [`@nuxtjs/typescript-module`](https://typescript.nuxtjs.org/) but disable the type check:\n\n```bash\nnpm i -D @nuxt/typescript-build vue-tsc\n```\n\n```ts\n// nuxt.config.js\nexport default {\n  buildModules: [\n    ['@nuxt/typescript-build', { typeCheck: false }],\n    '@nuxtjs/composition-api/module',\n    'unplugin-vue2-script-setup/nuxt',\n  ],\n}\n```\n\nAnd then use [`vue-tsc`](https://github.com/johnsoncodehk/volar) to do the type check at build time:\n\n```jsonc\n// package.json\n{\n  \"scripts\": {\n    \"dev\": \"nuxt\",\n    \"build\": \"vue-tsc --noEmit && nuxt build\"\n  }\n}\n```\n\n<br></details>\n\n<details>\n<summary>Vue CLI</summary><br>\n\n```ts\n// vue.config.js\nconst ScriptSetup = require('unplugin-vue2-script-setup/webpack').default\n\nmodule.exports = {\n  parallel: false,  // disable thread-loader, which is not compactible with this plugin\n  configureWebpack: {\n    plugins: [\n      ScriptSetup({ /* options */ }),\n    ],\n  },\n}\n```\n\nExample: [`examples/vue-cli`](./examples/vue-cli)\n\n###### TypeScript\n\nTo use TypeScript with Vue CLI, install `@vue/cli-plugin-typescript` but disable the type check:\n\n```bash\nnpm i -D @vue/cli-plugin-typescript vue-tsc\n```\n\n```ts\nconst ScriptSetup = require('unplugin-vue2-script-setup/webpack').default\nmodule.exports = {\n  parallel: false,\n  configureWebpack: {\n    plugins: [\n      ScriptSetup({ /* options */ }),\n    ],\n  },\n  chainWebpack(config) {\n    // disable type check and let `vue-tsc` handles it\n    config.plugins.delete('fork-ts-checker')\n  },\n}\n```\n\nAnd then use [`vue-tsc`](https://github.com/johnsoncodehk/volar) to do the type check at build time:\n\n```jsonc\n// package.json\n{\n  \"scripts\": {\n    \"dev\": \"vue-cli-service serve\",\n    \"build\": \"vue-tsc --noEmit && vue-cli-service build\"\n  }\n}\n```\n\n<br></details>\n\n<details>\n<summary>Webpack</summary><br>\n\n```ts\n// webpack.config.js\nconst ScriptSetup = require('unplugin-vue2-script-setup/webpack').default\nmodule.exports = {\n  /* ... */\n  plugins: [\n    ScriptSetup({ /* options */ }),\n  ]\n}\n```\n\n<br></details>\n\n<details>\n<summary>Rollup</summary><br>\n\n```ts\n// rollup.config.js\nimport Vue from 'rollup-plugin-vue'\nimport ScriptSetup from 'unplugin-vue2-script-setup/rollup'\n\nexport default {\n  plugins: [\n    Vue(),\n    ScriptSetup({ /* options */ }),\n  ]\n}\n```\n\n<br></details>\n\n<details>\n<summary>esbuild</summary><br>\n\n```ts\n// esbuild.config.js\nimport { build } from 'esbuild'\nimport ScriptSetup from 'unplugin-vue2-script-setup/esbuild'\nbuild({\n  /* ... */\n  plugins: [\n    ScriptSetup({\n      /* options */\n    }),\n  ],\n})\n```\n\n<br></details>\n\n<details>\n<summary>Jest</summary><br>\n\n```bash\nnpm i -D vue-jest\n```\n\n```ts\n// jest.config.js\nmodule.exports = {\n  transform: {\n    '.*\\\\.(vue)$': 'unplugin-vue2-script-setup/jest',\n  },\n}\n```\n\n<br></details>\n\n<details>\n<summary>JavaScript API</summary><br>\n\n```ts\nimport { transform } from 'unplugin-vue2-script-setup'\n\nconst Vue2SFC = transform(`\n<template>\n  <!-- ... -->\n</template>\n\n<script setup>\n  // ...\n</script>\n`)\n```\n\n<br></details>\n\n## IDE\n\nWe recommend using [VS Code](https://code.visualstudio.com/) with [Volar](https://github.com/johnsoncodehk/volar) to get the best experience (You might want to disable Vetur if you have it).\n\nWhen using Volar, you need to install `@vue/runtime-dom` as devDependencies to make it work on Vue 2.\n\n```bash\nnpm i -D @vue/runtime-dom\n```\n\n[Learn more](https://github.com/johnsoncodehk/volar#using)\n\n###### Global Types\n\nIf the global types are missing for your IDE, update your `tsconfig.json` with:\n\n```jsonc\n{\n  \"compilerOptions\": {\n    \"types\": [\n      \"unplugin-vue2-script-setup/types\"\n    ]\n  }\n}\n```\n\n###### Support Vue 2 template\n\nVolar preferentially supports Vue 3. Vue 3 and Vue 2 template has some different. You need to set the `experimentalCompatMode` option to support Vue 2 template.\n\n```jsonc\n{\n  \"compilerOptions\": {\n    ...\n  },\n  \"vueCompilerOptions\": {\n    \"experimentalCompatMode\": 2\n  },\n}\n```\n\n###### ESLint\n\nIf you are using ESLint, you might get `@typescript-eslint/no-unused-vars` warning with `<script setup>`. You can disable it and add `noUnusedLocals: true` in your `tsconfig.json`, Volar will infer the real missing locals correctly for you. \n\n## Configurations\n\n<details>\n  <summary>\n    Ref Sugar (take 2)\n  </summary>\n\nIn v0.5.x, we shipped the **experimental** [Ref Sugar (take 2)](https://github.com/vuejs/rfcs/discussions/369) implementation based on Vue 3's [`@vue/reactivity-transform`](https://github.com/vuejs/vue-next/tree/master/packages/reactivity-transform) package. Notice the syntax is not settled yet and might be changed in the future updates. **Use at your own risk!**\n\nTo enabled it, pass the option:\n\n```ts\nScriptSetup({\n  reactivityTransform: true\n})\n```\n\nTo get TypeScript support, update your `tsconfig.json` with:\n\n```jsonc\n{\n  \"compilerOptions\": {\n    \"types\": [\n      \"unplugin-vue2-script-setup/types\",\n      \"unplugin-vue2-script-setup/ref-macros\"\n    ]\n  }\n}\n```\n\n</details>\n\n## Recommendations\n\nIf you enjoy using `<script setup>`, you might also want to try [`unplugin-auto-import`](https://github.com/antfu/unplugin-auto-import) to improve the DX even further.\n\n## Progress\n\n- [x] PoC\n- [x] Components registration\n- [x] Compile time macros `defineProps` `defineEmits` `withDefaults` `defineExpose`\n- [x] Global types\n- [x] Merge with normal scripts\n- [x] [Ref Sugar (take 2)](https://github.com/vuejs/rfcs/discussions/369)\n- [x] `<template lang=\"pug\">` support\n- [x] Vite plugin\n- [x] Webpack plugin\n- [x] Nuxt module\n- [ ] ~~Top-level await~~ (not supported)\n\n## How?\n\n<details>\n  <summary>\n    👀\n  </summary>\n\n![image](https://user-images.githubusercontent.com/11247099/130307245-20f9342e-377b-4565-b55d-1b91741b5c0f.png)\n\nIt's made possible by transforming the `<script setup>` syntax back to normal `<script>` and let the Vue 2 SFC compiler handle the rest.\n\n<br></details>\n\n## Sponsors\n\n<p align=\"center\">\n  <a href=\"https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg\">\n    <img src='https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg'/>\n  </a>\n</p>\n\n## License\n\n[MIT](./LICENSE) License © 2021 [Anthony Fu](https://github.com/antfu)\n"
}